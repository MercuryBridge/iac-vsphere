name: Ansible vSphere VM Provisioning Pipeline
run-name: >
  [${{ github.ref_name }}] ${{ inputs.build_site }} | Group/VM: ${{ inputs.target_group }} |
  State: ${{ inputs.target_state }} | CR: ${{ inputs.change_request_number }}

on:
  workflow_dispatch:
    inputs:

      change_request_number: 
        description: "ServiceNow Change Request ID (e.g., CHG0031265). Mandatory for tracking."
        required: true
        default: "CHG0031265"

      build_site:
        type: choice
        description: "Deployment environment/site (e.g., SAT, PRD)."
        required: true
        default: "sat-sg1n"
        options:
          - "sat-sg1n"
          - "prd-sg1n"

      target_group:
        description: "Target host group(s) or VM(s) from Ansible inventory. 
          Use commas for multiple groups (e.g., vm-db,vm-non-db) or multiple VMs."
        required: true
        default: "vm-db,vm-non-db"

      target_state:
        type: choice
        description: "Desired state for host group/VM in Ansible inventory. 
          'present' = deploy, 'absent' = delete."
        required: true
        default: "present"
        options:
          - "present"
          - "absent"

permissions:
  contents: read
  packages: read

concurrency:
  group: ansible-${{ github.ref }}-${{ inputs.build_site }}-${{ inputs.target_group }}-${{ inputs.target_state }}
  cancel-in-progress: false

defaults:
  run:
    shell: bash -euo pipefail {0}

env:
  ANSIBLE_COLLECTIONS_PATH: /root/.ansible/collections:/usr/share/ansible/collections

jobs:
  pre:
    runs-on: [self-hosted]
    container:
      image: ubuntu:20.04
    steps:
      - uses: actions/checkout@v5

      - name: Load env from default location
        run: >-
          grep -v -e '^\s*#' -e '^\s*$' "build-env/${{ inputs.build_site }}.env"
          >> $GITHUB_ENV

    outputs:
      ansible_runner: ${{ env.ANSIBLE_RUNNER }}
      ansible_image: ${{ env.ANSIBLE_IMAGE }}

  validate:
    needs: [pre]
    runs-on: [self-hosted, "${{ needs.pre.outputs.ansible_runner }}"]
    environment: "${{ inputs.build_site }}-validation"
    container:
          image: "${{ needs.pre.outputs.ansible_image }}"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /opt/ssh_key/private_ssh_key:/secrets/private_ssh_key:ro
          credentials:
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Load env from default location
        run: >-
          grep -v -e '^\s*#' -e '^\s*$' "build-env/${{ inputs.build_site }}.env"
          >> $GITHUB_ENV

      - name: Stage SSH key
        working-directory: ansible/
        run: |
          cp /secrets/private_ssh_key ./private_ssh_key
          chmod 600 ./private_ssh_key

      # DEBUG
      - name: Print env
        run: |
          printenv

      # DEBUG
      - name: Print ansible version
        working-directory: ansible/
        run: |
          ansible-playbook --version
          ansible-galaxy collection list || true

      # - name: Ansible check
      #   env:
      #     ANSIBLE_HASHI_VAULT_ADDR: ${{ secrets.ANSIBLE_HASHI_VAULT_ADDR }}
      #     ANSIBLE_HASHI_VAULT_TOKEN: ${{ secrets.ANSIBLE_HASHI_VAULT_TOKEN }}
      #     ANSIBLE_HASHI_VAULT_PATH_BASE: ${{ secrets.ANSIBLE_HASHI_VAULT_PATH_BASE }}
      #   id: ansible_check
      #   working-directory: ansible/
      #   run: >-
      #     ansible-playbook
      #     -i inventories/${{ inputs.build_site }}/hosts
      #     -e "input_target_group=${{ inputs.target_group }}"
      #     -e "input_state_group=${{ inputs.target_state }}"
      #     -e "change_request_number=${{ inputs.change_request_number }}"
      #     prepare_environment.yaml --check --diff
          

  apply:
    needs: [pre, validate]
    runs-on: [self-hosted, "${{ needs.pre.outputs.ansible_runner }}"]
    environment: "${{ inputs.build_site }}-approved"
    container:
          image: "${{ needs.pre.outputs.ansible_image }}"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /opt/ssh_key/private_ssh_key:/secrets/private_ssh_key:ro
          credentials:
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Load env from default location
        run: >-
          grep -v -e '^\s*#' -e '^\s*$' "build-env/${{ inputs.build_site }}.env"
          >> $GITHUB_ENV

      - name: Stage SSH key
        working-directory: ansible/
        run: |
          cp /secrets/private_ssh_key ./private_ssh_key
          chmod 600 ./private_ssh_key

      - name: Ansible run
        env:
          ANSIBLE_HASHI_VAULT_ADDR: ${{ secrets.ANSIBLE_HASHI_VAULT_ADDR }}
          ANSIBLE_HASHI_VAULT_TOKEN: ${{ secrets.ANSIBLE_HASHI_VAULT_TOKEN }}
          ANSIBLE_HASHI_VAULT_PATH_BASE: ${{ secrets.ANSIBLE_HASHI_VAULT_PATH_BASE }}
        id: ansible_run
        working-directory: ansible/
        run: >-
          ansible-playbook
          -i inventories/${{ inputs.build_site }}/hosts
          -e "input_target_group=${{ inputs.target_group }}"
          -e "input_state_group=${{ inputs.target_state }}"
          -e "change_request_number=${{ inputs.change_request_number }}"
          -e "workflow_initiator=${{ github.actor }}"
          prepare_environment.yaml
