name: Gitleaks Scan
run-name: >
  [${{ github.ref_name }}] üîç Gitleaks Scan | ${{ github.actor }} | ${{ github.event_name }} 

on:
  pull_request:
  push:
  schedule:
    - cron: "0 2 * * *"   # UTC

jobs:
  scan:
    runs-on: [self-hosted]
    container:
      image: ghcr.io/mercurybridge/iac-vsphere:sat-sg1n-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITLEAKS_CONFIG: ".github/workflows_control/gitleaks.toml"
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      
      - name: Send Success Message
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            ‚úÖ *SECURITY SCAN PASSED* ‚úÖ
            
            *Actor*  : `${{ github.actor }}`
            *Repo*   : `${{ github.repository }}`
            *Branch* : `${{ github.ref_name }}`
            *Commit* : `${{ github.sha }}`
      
      - name: Send Failure Alert
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            üî• *SECRETS DETECTED - URGENT* üî•
            
            *Actor*  : `${{ github.actor }}`
            *Repo*   : `${{ github.repository }}`
            *Branch* : `${{ github.ref_name }}`
            *Commit* : `${{ github.sha }}`
            
            [üö® TAKE IMMEDIATE ACTION üö®](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
      
      - name: Fail Job on Secrets
        if: failure()
        run: exit 1